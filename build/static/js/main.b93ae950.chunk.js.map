{"version":3,"sources":["ContactsContainer/ContactsContainer.module.css","ContactsContainer/ContactsRow/ContactsRow.js","ContactsContainer/ContactsContainer.js","EditDisplay/EditDisplay.js","Pagination/Pagination.js","SearchBar/SearchBar.js","ReactIndependentFunctions/ShortListSearchedValues.js","ReactIndependentFunctions/ObtainDataAfterCheckboxToggle.js","App.js","ReactIndependentFunctions/MagicData.js","ReactIndependentFunctions/SelectAllFromCurrentList.js","index.js","ContactsContainer/ContactsRow/ContactsRow.module.css","SearchBar/SearchBar.module.css","Pagination/Pagination.module.css","EditDisplay/EditDisplay.module.css"],"names":["module","exports","ContactsRow","props","className","classes","common","checked","selected","details","checkboxspace","type","onChange","onCheckBoxClick","bind","id","namespace","name","emailspace","email","rolespace","role","actionspace","onClick","onClickEdit","onDeleteUser","ContactsContainer","obtainEachRow","data","filter","_","index","onPage","map","eachContact","ischecked","container","EditDisplay","initialState","user","useReducer","state","action","updatedData","item","dispatch","uponMakingChanges","changed","event","target","value","edit_container","modal","form","onSubmit","preventDefault","submit","defaultValue","Pagination","pageNumbersButtons","Array","from","length","total","i","eachNumber","Math","abs","active_page","onPageNumberClick","pagination_container","delete_all","onDeleteSelected","delete_selected","page_numbers_container","onFirstPage","onPrevPage","onNextPage","onLastPage","SearchBar","search_container","showSearchedValue","placeholder","search","headers","selectAll","onSelectAll","ShortListSearchedValues","obtainedData","obtainedString","eachPerson","searchQuery","toLowerCase","includes","toggleHandler","manipulatedItem","bool","App","useState","dataUpdate","dataToDisplay","toDisplayUpdate","currentPage","setPage","totalPages","setTotalPages","allSelected","setAllSelected","showEditDisplay","setEditDisplay","dataToEdit","setDataToEdit","setPagination","referenceArray","pageNumber","ceil","fetchContactDataFromAPI","useCallback","a","fetch","response","ok","Error","json","result","sort","b","addingCheckBoxState","eachUser","console","log","useEffect","onClickEditHandler","currState","selectedData","findIndex","filteredData","updateAllSelected","referenceData","filteredDataAsPerPageNumber","updatedEachUser","SelectAllFromCurrentList","filteredDataAsPerPageNumberForMainData","getRef","eachRefUser","deleteData","window","confirm","updatedShowData","limit","num","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,UAAY,uC,+KCsBfC,EArBK,SAACC,GAEjB,OACI,mCACI,qBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBH,EAAMI,QAAN,UAAmBF,IAAQG,UAAa,IAA7E,SACI,sBAAKJ,UAAWC,IAAQI,QAAxB,UACI,mBAAGL,UAAWC,IAAQK,cAAtB,SACI,uBAAOC,KAAK,WACRC,SAAUT,EAAMU,gBAAgBC,KAAK,EAAMX,EAAMY,IACjDR,QAASJ,EAAMI,YAEvB,mBAAGH,UAAWC,IAAQW,UAAtB,SAAkCb,EAAMc,OACxC,mBAAGb,UAAWC,IAAQa,WAAtB,SAAmCf,EAAMgB,QACzC,mBAAGf,UAAWC,IAAQe,UAAtB,SAAkCjB,EAAMkB,OACxC,oBAAGjB,UAAWC,IAAQiB,YAAtB,UAAmC,sBAAMC,QAASpB,EAAMqB,YAAYV,KAAK,EAAMX,EAAMY,IAAlD,SAAuD,mBAAGX,UAAU,kBAAyB,uBAAMmB,QAASpB,EAAMsB,aAAaX,KAAK,EAAMX,EAAMY,IAAnD,uBAAsE,mBAAGX,UAAU,mC,iBCgBxNsB,EA7BW,SAACvB,GACvB,IAIMwB,EAJ8BxB,EAAMyB,KAAKC,QAAO,SAACC,EAAGC,GACtD,OAAOA,GAA8B,GAApB5B,EAAM6B,OAAS,IAAUD,EAAyB,EAAhB5B,EAAM6B,UAGXC,KAAI,SAACC,GACnD,OACI,cAAC,EAAD,CAEInB,GAAImB,EAAYnB,GAChBE,KAAMiB,EAAYjB,KAClBE,MAAOe,EAAYf,MACnBE,KAAMa,EAAYb,KAClBI,aAActB,EAAMsB,aACpBlB,QAAS2B,EAAYC,UACrBtB,gBAAiBV,EAAMU,gBACvBW,YAAarB,EAAMqB,aARdU,EAAYnB,OAc7B,OACI,qBAAKX,UAAWC,IAAQ+B,UAAxB,SACKT,K,yBCoCEU,EA1DK,SAAClC,GACjB,IAAMmC,EAAY,eACXnC,EAAMoC,MAwBb,MAA0BC,sBArB1B,SAAiBC,EAAOC,GACpB,GAAoB,SAAhBA,EAAO/B,KAAiB,CACxB,IAAMgC,EAAW,eAAQF,GAEzB,OADAE,EAAY1B,KAAOyB,EAAOE,KACnBD,EAEX,GAAoB,UAAhBD,EAAO/B,KAAkB,CACzB,IAAMgC,EAAW,eAAQF,GAEzB,OADAE,EAAYxB,MAAQuB,EAAOE,KACpBD,EAEX,GAAoB,SAAhBD,EAAO/B,KAAiB,CACxB,IAAMgC,EAAW,eAAQF,GAEzB,OADAE,EAAYtB,KAAOqB,EAAOE,KACnBD,EAGX,OAAOL,IAImCA,GAA9C,mBAAOG,EAAP,KAAcI,EAAd,KAEA,SAASC,EAAkBC,EAASC,GAChCH,EAAS,CACLlC,KAAMoC,EACNH,KAAMI,EAAMC,OAAOC,QAS3B,OACI,qBAAK9C,UAAWC,IAAQ8C,eAAxB,SACI,sBAAK/C,UAAWC,IAAQ+C,MAAxB,UACI,uBACA,uBAAMhD,UAAWC,IAAQgD,KAAMC,SAT3C,SAAuBN,GACnBA,EAAMO,iBACNpD,EAAMqD,OAAOf,IAOL,UACI,uCACA,uBAAO9B,KAAK,OAAO8C,aAAchB,EAAMxB,KAAML,SAAUkC,EAAkBhC,KAAK,EAAM,UACpF,wCACA,uBAAOH,KAAK,OAAO8C,aAAchB,EAAMtB,MAAOP,SAAUkC,EAAkBhC,KAAK,EAAM,WACrF,uCACA,uBAAOH,KAAK,OAAO8C,aAAchB,EAAMpB,KAAMT,SAAUkC,EAAkBhC,KAAK,EAAM,UACpF,mBAAGV,UAAWC,IAAQmD,OAAtB,SAA8B,wBAAQ7C,KAAK,SAAb,qC,gBC7BnC+C,EAzBI,SAACvD,GAEhB,IAKMwD,EALcC,MAAMC,KAAK,CAAEC,OAAQ3D,EAAM4D,QAAS,SAACjC,EAAGkC,GAAJ,OAAUA,EAAI,KAC/BnC,QAAO,SAACoC,GAC3C,OAAOC,KAAKC,IAAIF,EAAa9D,EAAM6B,SAAW,KAGJC,KAAI,SAAAgC,GAC9C,OAAO,wBAAyB7D,UAAW6D,IAAe9D,EAAM6B,OAArB,UAAiC3B,IAAQ+D,aAAgB,GAAI7C,QAASpB,EAAMkE,kBAAkBvD,K,UAAWmD,GAA7I,SAA2JA,GAA9IA,MAGxB,OACI,sBAAK7D,UAAWC,IAAQiE,qBAAxB,UACI,qBAAKlE,UAAWC,IAAQkE,WAAxB,SAAoC,wBAAQhD,QAASpB,EAAMqE,iBAAkBpE,UAAWC,IAAQoE,gBAA5D,+BACpC,sBAAKrE,UAAWC,IAAQqE,uBAAxB,UACI,wBAAQnD,QAASpB,EAAMwE,YAAvB,SAAoC,mBAAGvE,UAAU,sBACjD,wBAAQmB,QAASpB,EAAMyE,WAAvB,SAAmC,mBAAGxE,UAAU,2BAC/CuD,EACD,wBAAQpC,QAASpB,EAAM0E,WAAvB,SAAmC,mBAAGzE,UAAU,0BAChD,wBAAQmB,QAASpB,EAAM2E,WAAvB,SAAmC,mBAAG1E,UAAU,4B,gBCIjD2E,EAvBG,SAAC5E,GAEf,OACI,sBAAKC,UAAWC,IAAQ2E,iBAAxB,UACI,uBAAOrE,KAAK,OAAOC,SAAUT,EAAM8E,kBAAmBC,YAAY,gCAAgC9E,UAAWC,IAAQ8E,SAErH,sBAAK/E,UAAWC,IAAQ+E,QAAxB,UACI,mBAAGhF,UAAWC,IAAQK,cAAtB,SACI,uBACIC,KAAK,WACLC,SAAUT,EAAMkF,UAChB9E,QAASJ,EAAMmF,gBAGvB,mBAAGlF,UAAWC,IAAQW,UAAtB,kBACA,mBAAGZ,UAAWC,IAAQa,WAAtB,mBACA,mBAAGd,UAAWC,IAAQe,UAAtB,kBACA,mBAAGhB,UAAWC,IAAQiB,YAAtB,4BCTDiE,EARiB,SAACC,EAAcC,GAK3C,OAJqBD,EAAa3D,QAAO,SAAC6D,GACtC,IAAIC,EAAcF,EAAeG,cACjC,OAAOF,EAAWzE,KAAK2E,cAAcC,SAASF,IAAgBD,EAAWvE,MAAMyE,cAAcC,SAASF,IAAgBD,EAAWrE,KAAKuE,cAAcC,SAASF,OCOtJG,EAZO,SAACN,EAAczE,GASjC,OARkByE,EAAavD,KAAI,SAAAW,GAC/B,GAAIA,EAAK7B,KAAOA,EAAI,OAAO6B,EAC3B,IAAMmD,EAAe,eAAQnD,GACvBoD,EAAOD,EAAgB5D,UAE7B,OADA4D,EAAgB5D,WAAa6D,EACtBD,MC4OAE,MAtOf,WAIE,MAA2BC,mBAAS,IAApC,mBAAOtE,EAAP,KAAauE,EAAb,KAEA,EAAyCD,mBAAS,IAAlD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEA,EAA+BH,mBAAS,GAAxC,mBAAOI,EAAP,KAAoBC,EAApB,KAEA,EAAoCL,mBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEA,EAAsCP,oBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAEA,EAA0CT,oBAAS,GAAnD,mBAAOU,EAAP,KAAwBC,EAAxB,KAEA,EAAoCX,mBAAS,IAA7C,mBAAOY,EAAP,KAAmBC,EAAnB,KAIMC,EAAgB,SAACC,GAAoC,IAApBC,EAAmB,uDAAN,EAClDT,EAAcvC,KAAKiD,KAAMF,EAAenD,OC5BlB,ID6BtByC,EAAQW,IAKJE,EAA0BC,sBAAW,sBACzC,gCAAAC,EAAA,+EAE2BC,MCvCnB,kFDqCR,WAEUC,EAFV,QAIkBC,GAJlB,sBAKY,IAAIC,MAAM,yBALtB,uBAOyBF,EAASG,OAPlC,QAOUC,EAPV,QAQWC,MAAK,SAACP,EAAGQ,GAAJ,OAAUR,EAAErG,KAAO6G,EAAE7G,MAAQ,EAAI,KAEvC8G,EAAsBH,EAAO3F,KAAI,SAAA+F,GAKrC,OAJS,2BACJA,GADI,IAEP,WAAa,OAIjB7B,EAAW4B,GACX1B,EAAgB0B,GAChBf,EAAce,GAnBlB,kDAqBIE,QAAQC,IAAR,MArBJ,0DAuBG,IAGLC,qBAAU,WACRf,MACC,CAACA,IAIJ,IA6GMgB,EAAqB,SAACrH,GAC1B,IAAMsH,EAAYzB,EAGlB,GAFAC,GAAgBwB,IAEZA,EAAJ,CAIA,IAAMC,EAAelC,EAAcvE,QAAO,SAAAmG,GAAQ,OAAIA,EAASjH,KAAOA,KACtEgG,EAAcuB,EAAa,MA0B7B,OACE,qCACG1B,GAAmB,cAAC,EAAD,CAAarE,KAAMuE,EAAYtD,OAvBjC,SAACf,GAErB2F,IAEA,IAAIrG,EAAQqE,EAAcmC,WAAU,SAAAP,GAAQ,OAAIA,EAASjH,KAAO0B,EAAM1B,MAClE4B,EAAW,YAAOyD,GACtBzD,EAAYZ,GAASU,EAErBE,EAAYkF,MAAK,SAACP,EAAGQ,GAAJ,OAAUR,EAAErG,KAAO6G,EAAE7G,MAAQ,EAAI,KAElDoF,EAAgB1D,GAEhBZ,EAAQH,EAAK2G,WAAU,SAAAP,GAAQ,OAAIA,EAASjH,KAAO0B,EAAM1B,OACzD4B,EAAW,YAAOf,IACNG,GAASU,EACrBE,EAAYkF,MAAK,SAACP,EAAGQ,GAAJ,OAAUR,EAAErG,KAAO6G,EAAE7G,MAAQ,EAAI,KAClDkF,EAAWxD,MAQT,cAAC,EAAD,CACE2C,YAAaoB,EACbzB,kBAzF2B,SAACjC,GAEhC,GADA2D,GAAe,GACY,KAAvB3D,EAAMC,OAAOC,MAGf,OAFAmD,EAAgBzE,QAChBoF,EAAcpF,EAAM,GAGtB,IAAI4G,EAAejD,EAAwB3D,EAAMoB,EAAMC,OAAOC,OAC9DmD,EAAgBmC,GAChBxB,EAAcwB,EAAc,IAiFxBnD,UApDmB,WACvB,IAAMoD,EAAoB/B,EAC1BC,GAAgB8B,GAChB,IEzJoBC,EFyJdC,EEtKuB,SAACnD,EAAcc,EAAamC,GAUzD,OAToCjD,EAAavD,KAAI,SAAC+F,EAAUjG,GAC5D,GAAIA,GAA6B,GAAnBuE,EAAc,IAAUvE,EAAwB,EAAfuE,EAAkB,CAC7D,IAAMsC,EAAe,eAAQZ,GAE7B,OADAY,EAAgBzG,WAAasG,EACtBG,EAEX,OAAOZ,KF+JyBa,CAAyBzC,EAAeE,EAAamC,GAEnFK,GE3JcJ,EF2J0CC,EAA6B/G,EE1JlEK,KAAI,SAAC+F,GAC1B,IAAMe,EAASL,EAAc7G,QAAO,SAAAmH,GAChC,OAAOA,EAAYjI,KAAOiH,EAASjH,MAEvC,OAAsB,IAAlBgI,EAAOjF,OACAiF,EAAO,GAGPf,MFoJf3B,EAAgBsC,GAChBxC,EAAW2C,MA8CT,cAAC,EAAD,CACElH,KAAMwE,EACNpE,OAAQsE,EACR7E,aA3JqB,SAACV,GAC1B,IAAMkI,EAAarH,EAAKC,QAAO,SAAAe,GAAI,OAAIA,EAAK7B,KAAOA,KAC7C4B,EAAcf,EAAKC,QAAO,SAAAe,GAAI,OAAIA,EAAK7B,KAAOA,KACpD,GAAKmI,OAAOC,QAAP,0CAAkDF,EAAW,GAAGhI,KAAhE,aAAL,CAGA,IAAMmI,EAAkBhD,EAAcvE,QAAO,SAAAe,GAAI,OAAIA,EAAK7B,KAAOA,KACjEsF,EAAgB+C,GAChBjD,EAAWxD,GAEX,IAAM0G,EAAQnF,KAAKiD,KAAMiC,EAAgBtF,OC7EnB,GD8EtBkD,EAAcoC,EAAiB9C,EAAc+C,EAAQA,EAAQ/C,KAiJzDzF,gBAlFwB,SAACE,GAC7B,IAAI4B,EAAcmD,EAAclE,EAAMb,GAClCqI,EAAkBtD,EAAcM,EAAerF,GAEnDsF,EAAgB+C,GAChBjD,EAAWxD,IA8EPnB,YAAa4G,IAEf,cAAC,EAAD,CACEpG,OAAQsE,EACRzB,WAhJkB,WAClByB,IAAgBE,IAIlBD,EAAQD,EAAc,GACtBK,GAAe,KA2Ib/B,WAvIkB,WACF,IAAhB0B,IAIFC,EAAQD,EAAc,GACtBK,GAAe,KAkIbhC,YA9HuB,WACP,IAAhB2B,IAGJC,EAAQ,GACRI,GAAe,KAyHwB7B,WAtHb,WACtBwB,IAAgBE,IAGpBD,EAAQC,GACRG,GAAe,KAiHyDtC,kBA9GrC,SAACiF,GACpC/C,EAAQ+C,GACR3C,GAAe,IA6GX5C,MAAOyC,EACPhC,iBAlFwB,WAC5B,GAAK0E,OAAOC,QAAQ,kDAApB,CAGA,IAAMxG,EAAcf,EAAKC,QAAO,SAAAe,GAAI,OAAKA,EAAKT,aACxCiH,EAAkBhD,EAAcvE,QAAO,SAAAe,GAAI,OAAKA,EAAKT,aAC3DkE,EAAgB+C,GAChBjD,EAAWxD,GAEX,IAAM0G,EAAQnF,KAAKiD,KAAMiC,EAAgBtF,OC/JnB,GDgKtBkD,EAAcoC,EAAiB9C,EAAc+C,EAAQA,EAAQ/C,WG/JjEiD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCLjD1J,EAAOC,QAAU,CAAC,OAAS,4BAA4B,SAAW,8BAA8B,QAAU,6BAA6B,cAAgB,mCAAmC,UAAY,+BAA+B,WAAa,gCAAgC,UAAY,+BAA+B,YAAc,mC,kBCA3UD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,OAAS,0BAA0B,QAAU,2BAA2B,cAAgB,iCAAiC,UAAY,6BAA6B,WAAa,8BAA8B,UAAY,6BAA6B,YAAc,iC,kBCA7UD,EAAOC,QAAU,CAAC,qBAAuB,yCAAyC,WAAa,+BAA+B,uBAAyB,2CAA2C,YAAc,gCAAgC,gBAAkB,sC,kBCAlQD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.b93ae950.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsContainer_container__2-O6A\"};","import classes from './ContactsRow.module.css';\r\n\r\nconst ContactsRow = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={`${classes.common} ${props.checked ? `${classes.selected}` : ''}`} >\r\n                <div className={classes.details}>\r\n                    <p className={classes.checkboxspace}>\r\n                        <input type=\"checkbox\"\r\n                            onChange={props.onCheckBoxClick.bind(this, props.id)}\r\n                            checked={props.checked} />\r\n                    </p>\r\n                    <p className={classes.namespace}>{props.name}</p>\r\n                    <p className={classes.emailspace}>{props.email}</p>\r\n                    <p className={classes.rolespace}>{props.role}</p>\r\n                    <p className={classes.actionspace}><span onClick={props.onClickEdit.bind(this, props.id)}><i className=\"fas fa-edit\"></i></span><span onClick={props.onDeleteUser.bind(this, props.id)}> &nbsp;&nbsp; <i className=\"fas fa-trash-alt\"></i></span></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactsRow;\r\n// 10 20 30 20 20","import ContactsRow from \"./ContactsRow/ContactsRow\";\r\nimport classes from \"./ContactsContainer.module.css\";\r\n\r\nconst ContactsContainer = (props) => {\r\n    const filteredDataAsPerPageNumber = props.data.filter((_, index) => {\r\n        return index >= (props.onPage - 1) * 6 && index < (props.onPage) * 6;\r\n    })\r\n\r\n    const obtainEachRow = filteredDataAsPerPageNumber.map((eachContact) => {\r\n        return (\r\n            <ContactsRow\r\n                key={eachContact.id}\r\n                id={eachContact.id}\r\n                name={eachContact.name}\r\n                email={eachContact.email}\r\n                role={eachContact.role}\r\n                onDeleteUser={props.onDeleteUser}\r\n                checked={eachContact.ischecked}\r\n                onCheckBoxClick={props.onCheckBoxClick}\r\n                onClickEdit={props.onClickEdit\r\n                }\r\n            />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {obtainEachRow}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsContainer;","import { useReducer } from 'react';\r\n\r\nimport classes from './EditDisplay.module.css';\r\n\r\n\r\nconst EditDisplay = (props) => {\r\n    const initialState = {\r\n        ...props.user\r\n    }\r\n\r\n    function reducer(state, action) {\r\n        if (action.type === 'name') {\r\n            const updatedData = { ...state };\r\n            updatedData.name = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'email') {\r\n            const updatedData = { ...state };\r\n            updatedData.email = action.item;\r\n            return updatedData;\r\n        }\r\n        if (action.type === 'role') {\r\n            const updatedData = { ...state };\r\n            updatedData.role = action.item;\r\n            return updatedData;\r\n        }\r\n\r\n        return initialState;\r\n\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    function uponMakingChanges(changed, event) {\r\n        dispatch({\r\n            type: changed,\r\n            item: event.target.value\r\n        });\r\n    }\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        props.submit(state);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.edit_container}>\r\n            <div className={classes.modal}>\r\n                <br />\r\n                <form className={classes.form} onSubmit={submitHandler}>\r\n                    <h5>Name:</h5>\r\n                    <input type=\"text\" defaultValue={state.name} onChange={uponMakingChanges.bind(this, \"name\")} />\r\n                    <h5>Email:</h5>\r\n                    <input type=\"text\" defaultValue={state.email} onChange={uponMakingChanges.bind(this, \"email\")} />\r\n                    <h5>Role:</h5>\r\n                    <input type=\"text\" defaultValue={state.role} onChange={uponMakingChanges.bind(this, \"role\")} />\r\n                    <p className={classes.submit}><button type=\"submit\" >Edit Changes</button></p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDisplay;","import classes from './Pagination.module.css';\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const pageNumbers = Array.from({ length: props.total }, (_, i) => i + 1);\r\n    const filterdPageNumbers = pageNumbers.filter((eachNumber) => {\r\n        return Math.abs(eachNumber - props.onPage) <= 2;\r\n    });\r\n\r\n    const pageNumbersButtons = filterdPageNumbers.map(eachNumber => {\r\n        return <button key={eachNumber} className={eachNumber === props.onPage ? `${classes.active_page}` : ''} onClick={props.onPageNumberClick.bind(this, eachNumber)}>{eachNumber}</button>\r\n    })\r\n\r\n    return (\r\n        <div className={classes.pagination_container}>\r\n            <div className={classes.delete_all}><button onClick={props.onDeleteSelected} className={classes.delete_selected}>Delete Selected</button></div>\r\n            <div className={classes.page_numbers_container}>\r\n                <button onClick={props.onFirstPage}><i className=\"fas fa-backward\"></i></button>\r\n                <button onClick={props.onPrevPage}><i className=\"fas fa-step-backward\"></i></button>\r\n                {pageNumbersButtons}\r\n                <button onClick={props.onNextPage}><i className=\"fas fa-step-forward\"></i></button>\r\n                <button onClick={props.onLastPage}><i className=\"fas fa-forward\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import classes from './SearchBar.module.css';\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    return (\r\n        <div className={classes.search_container}>\r\n            <input type=\"text\" onChange={props.showSearchedValue} placeholder=\"Search by name, email or role\" className={classes.search}>\r\n            </input>\r\n            <div className={classes.headers}>\r\n                <p className={classes.checkboxspace}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={props.selectAll}\r\n                        checked={props.onSelectAll}\r\n                    />\r\n                </p>\r\n                <p className={classes.namespace}>Name</p>\r\n                <p className={classes.emailspace} >Email</p>\r\n                <p className={classes.rolespace}>Role</p>\r\n                <p className={classes.actionspace}>Actions</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","// Based on the search query, retreive relevant data\r\n\r\nconst ShortListSearchedValues = (obtainedData, obtainedString) => {\r\n    const filteredData = obtainedData.filter((eachPerson) => {\r\n        let searchQuery = obtainedString.toLowerCase();\r\n        return eachPerson.name.toLowerCase().includes(searchQuery) || eachPerson.email.toLowerCase().includes(searchQuery) || eachPerson.role.toLowerCase().includes(searchQuery)\r\n    });\r\n    return filteredData;\r\n}\r\n\r\nexport default ShortListSearchedValues;","const toggleHandler = (obtainedData, id) => {\r\n    let updatedData = obtainedData.map(item => {\r\n        if (item.id !== id) return item;\r\n        const manipulatedItem = { ...item };\r\n        const bool = manipulatedItem.ischecked;\r\n        manipulatedItem.ischecked = !bool;\r\n        return manipulatedItem;\r\n    });\r\n\r\n    return updatedData;\r\n}\r\n\r\nexport default toggleHandler;","import { useCallback, useEffect, useState } from \"react\";\nimport ContactsContainer from \"./ContactsContainer/ContactsContainer\";\nimport EditDisplay from \"./EditDisplay/EditDisplay\";\nimport Pagination from \"./Pagination/Pagination\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport ShortListSearchedValues from \"./ReactIndependentFunctions/ShortListSearchedValues\";\nimport toggleHandler from \"./ReactIndependentFunctions/ObtainDataAfterCheckboxToggle\";\nimport { SelectAllFromCurrentList, updateMainList } from \"./ReactIndependentFunctions/SelectAllFromCurrentList\";\n\nimport { URL, DATA_ON_EACH_PAGE } from \"./ReactIndependentFunctions/MagicData\";\n\n\nfunction App() {\n\n  // Initializing all the required states\n\n  const [data, dataUpdate] = useState([]);\n\n  const [dataToDisplay, toDisplayUpdate] = useState([]);\n\n  const [currentPage, setPage] = useState(1);\n\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [allSelected, setAllSelected] = useState(false);\n\n  const [showEditDisplay, setEditDisplay] = useState(false);\n\n  const [dataToEdit, setDataToEdit] = useState({});\n\n  // A function that handles pagination. Avoids Repeatedly using the same set of lines\n\n  const setPagination = (referenceArray, pageNumber = 1) => {\n    setTotalPages(Math.ceil((referenceArray.length / DATA_ON_EACH_PAGE)));\n    setPage(pageNumber);\n  }\n\n  // Obtain data from the API\n\n  const fetchContactDataFromAPI = useCallback(\n    async () => {\n      try {\n        const response = await fetch(URL);\n\n        if (!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const result = await response.json();\n        result.sort((a, b) => a.name < b.name ? -1 : 1);\n\n        const addingCheckBoxState = result.map(eachUser => {\n          const res = {\n            ...eachUser,\n            \"ischecked\": false\n          }\n          return res;\n        });\n        dataUpdate(addingCheckBoxState);\n        toDisplayUpdate(addingCheckBoxState);\n        setPagination(addingCheckBoxState);\n      } catch (e) {\n        console.log(e);\n      }\n    }, []\n  );\n\n  useEffect(() => {\n    fetchContactDataFromAPI();\n  }, [fetchContactDataFromAPI]);\n\n  // Delete a single user through the action button\n\n  const deleteAUserHandler = (id) => {\n    const deleteData = data.filter(item => item.id === id);\n    const updatedData = data.filter(item => item.id !== id);\n    if (!window.confirm(`Are you sure you want to delete ${deleteData[0].name}'s data?`)) {\n      return;\n    }\n    const updatedShowData = dataToDisplay.filter(item => item.id !== id);\n    toDisplayUpdate(updatedShowData);\n    dataUpdate(updatedData);\n\n    const limit = Math.ceil((updatedShowData.length / DATA_ON_EACH_PAGE))\n    setPagination(updatedShowData, currentPage > limit ? limit : currentPage);\n  }\n\n  /****  All for Pagination ****/\n\n  // When we try to change the page through the arrow buttons\n  const nextPageHandler = () => {\n    if (currentPage === totalPages) {\n      return;\n    }\n    else {\n      setPage(currentPage + 1);\n      setAllSelected(false);\n    }\n  }\n\n  const prevPageHandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n    else {\n      setPage(currentPage - 1);\n      setAllSelected(false);\n    }\n  }\n\n  const goToFirstPageHandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n    setPage(1);\n    setAllSelected(false);\n  }\n\n  const goToLastPageHandler = () => {\n    if (currentPage === totalPages) {\n      return;\n    }\n    setPage(totalPages);\n    setAllSelected(false);\n  }\n\n  const onClickingAPageNumberHandler = (num) => {\n    setPage(num);\n    setAllSelected(false);\n  }\n\n  // Function for SearchBar- This is triggered whenever user types something in the searchbar\n\n  const showSearchedValueHandler = (event) => {\n    setAllSelected(false);\n    if (event.target.value === '') {\n      toDisplayUpdate(data);\n      setPagination(data, 1);\n      return;\n    }\n    let filteredData = ShortListSearchedValues(data, event.target.value);\n    toDisplayUpdate(filteredData);\n    setPagination(filteredData, 1);\n\n  }\n\n  // Function for toggling checkbox of a single row\n  const toggleCheckBoxHandler = (id) => {\n    let updatedData = toggleHandler(data, id);\n    let updatedShowData = toggleHandler(dataToDisplay, id);\n\n    toDisplayUpdate(updatedShowData);\n    dataUpdate(updatedData);\n  }\n\n  // Delete All selected\n  const deleteSelectedHandler = () => {\n    if (!window.confirm('Are you sure you want to delete Selected data?')) {\n      return;\n    }\n    const updatedData = data.filter(item => !item.ischecked);\n    const updatedShowData = dataToDisplay.filter(item => !item.ischecked);\n    toDisplayUpdate(updatedShowData);\n    dataUpdate(updatedData);\n\n    const limit = Math.ceil((updatedShowData.length / DATA_ON_EACH_PAGE))\n    setPagination(updatedShowData, currentPage > limit ? limit : currentPage);\n\n  }\n\n  // Select all from the currently visible list\n  const selectAllHandler = () => {\n    const updateAllSelected = allSelected;\n    setAllSelected(!updateAllSelected);\n    const filteredDataAsPerPageNumber = SelectAllFromCurrentList(dataToDisplay, currentPage, updateAllSelected);\n\n    const filteredDataAsPerPageNumberForMainData = updateMainList(filteredDataAsPerPageNumber, data);\n\n    toDisplayUpdate(filteredDataAsPerPageNumber);\n    dataUpdate(filteredDataAsPerPageNumberForMainData);\n  }\n\n  const onClickEditHandler = (id) => {\n    const currState = showEditDisplay;\n    setEditDisplay(!currState);\n\n    if (currState) {\n      return;\n    }\n\n    const selectedData = dataToDisplay.filter(eachUser => eachUser.id === id);\n    setDataToEdit(selectedData[0]);\n  }\n\n  // When user edits some data, the below function is called \n\n  const submitHandler = (state) => {\n\n    onClickEditHandler();\n\n    let index = dataToDisplay.findIndex(eachUser => eachUser.id === state.id);\n    let updatedData = [...dataToDisplay];\n    updatedData[index] = state;\n\n    updatedData.sort((a, b) => a.name < b.name ? -1 : 1);\n\n    toDisplayUpdate(updatedData);\n\n    index = data.findIndex(eachUser => eachUser.id === state.id);\n    updatedData = [...data];\n    updatedData[index] = state;\n    updatedData.sort((a, b) => a.name < b.name ? -1 : 1);\n    dataUpdate(updatedData);\n\n  }\n\n\n  return (\n    <>\n      {showEditDisplay && <EditDisplay user={dataToEdit} submit={submitHandler} />}\n      <SearchBar\n        onSelectAll={allSelected}\n        showSearchedValue={showSearchedValueHandler}\n        selectAll={selectAllHandler}\n      />\n      <ContactsContainer\n        data={dataToDisplay}\n        onPage={currentPage}\n        onDeleteUser={deleteAUserHandler}\n        onCheckBoxClick={toggleCheckBoxHandler}\n        onClickEdit={onClickEditHandler}\n      />\n      <Pagination\n        onPage={currentPage}\n        onNextPage={nextPageHandler}\n        onPrevPage={prevPageHandler}\n        onFirstPage={goToFirstPageHandler} onLastPage={goToLastPageHandler} onPageNumberClick={onClickingAPageNumberHandler}\n        total={totalPages}\n        onDeleteSelected={deleteSelectedHandler} />\n    </>\n  );\n}\n\nexport default App;","// Application specific data\r\n\r\n\r\nconst URL = 'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json';\r\n\r\nconst DATA_ON_EACH_PAGE = 6;\r\n\r\nexport { URL, DATA_ON_EACH_PAGE };","// This is required in order to change the state of row selection\r\n\r\n// The SelectAllFromCurrentList is required to update the list that is responsible for showcasing the rows\r\n\r\n// The updateMainList is required to update the MAIN LIST. \r\n\r\n// Refer fetchContactDataFromAPI function in App to understand better\r\nconst SelectAllFromCurrentList = (obtainedData, currentPage, updateAllSelected) => {\r\n    const filteredDataAsPerPageNumber = obtainedData.map((eachUser, index) => {\r\n        if (index >= (currentPage - 1) * 6 && index < (currentPage) * 6) {\r\n            const updatedEachUser = { ...eachUser };\r\n            updatedEachUser.ischecked = !updateAllSelected;\r\n            return updatedEachUser;\r\n        }\r\n        return eachUser;\r\n    });\r\n\r\n    return filteredDataAsPerPageNumber;\r\n}\r\n\r\nconst updateMainList = (referenceData, mainData) => {\r\n    const updated = mainData.map((eachUser) => {\r\n        const getRef = referenceData.filter(eachRefUser => {\r\n            return eachRefUser.id === eachUser.id;\r\n        })\r\n        if (getRef.length === 1) {\r\n            return getRef[0];\r\n        }\r\n        else {\r\n            return eachUser;\r\n        }\r\n\r\n    });\r\n\r\n    return updated\r\n}\r\n\r\n\r\nexport { SelectAllFromCurrentList, updateMainList };","import ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"ContactsRow_common__ixgNG\",\"selected\":\"ContactsRow_selected__2bsbT\",\"details\":\"ContactsRow_details__Axy2s\",\"checkboxspace\":\"ContactsRow_checkboxspace__2CM4t\",\"namespace\":\"ContactsRow_namespace__1Zriz\",\"emailspace\":\"ContactsRow_emailspace__nXp1r\",\"rolespace\":\"ContactsRow_rolespace__3aRA8\",\"actionspace\":\"ContactsRow_actionspace__2eUZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_container\":\"SearchBar_search_container__3pb_b\",\"search\":\"SearchBar_search__3YOLT\",\"headers\":\"SearchBar_headers__KWbyN\",\"checkboxspace\":\"SearchBar_checkboxspace__ER8fm\",\"namespace\":\"SearchBar_namespace__2hZGR\",\"emailspace\":\"SearchBar_emailspace__3yA8s\",\"rolespace\":\"SearchBar_rolespace__1uOSa\",\"actionspace\":\"SearchBar_actionspace__2W5PN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination_container\":\"Pagination_pagination_container__2aQCQ\",\"delete_all\":\"Pagination_delete_all__3pUVo\",\"page_numbers_container\":\"Pagination_page_numbers_container__2rTJn\",\"active_page\":\"Pagination_active_page__2TztO\",\"delete_selected\":\"Pagination_delete_selected__2Fw0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit_container\":\"EditDisplay_edit_container__2UXqO\",\"modal\":\"EditDisplay_modal__o_rBL\",\"form\":\"EditDisplay_form__3i8FE\",\"submit\":\"EditDisplay_submit__VsTDb\"};"],"sourceRoot":""}